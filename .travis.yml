version: "~> 1.0"

import:
  - source: netfoundry/ziti-ci:go-defaults.yml@v1
  - source: netfoundry/ziti-ci:ziti-ci.yml@v1

env:
  global:
    - GOX_OUTPUT="release/{{.Arch}}/{{.OS}}/{{.Dir}}"

stages:
  - name: "Build and Test"
    if: branch != update-dependency or type = pull_request
  - name: "Update Dependency"
    if: branch = update-dependency and type == api
  - name: "Tag and Publish"
    if: branch != update-dependency or type = pull_request

jobs:
  include:
    - stage: "Update Dependency"
      os: linux
      arch: amd64
      env: GOX_OS=linux
      script:
        - set -e
        - ziti-ci configure-git
        - ziti-ci update-go-dependency
        - go test ./...
        - ziti-ci complete-update-go-dependency

    - stage: "Build and Test"
      os: linux
      arch: arm64
      dist: bionic
      env: GOX_OS=linux
      script:
        - set -e
        - sudo dpkg --add-architecture armhf
        - sudo apt-get update -yq 
        - |-
          sudo apt-get -yq install \
            crossbuild-essential-armhf \
            libc6:armhf
        - pip install --upgrade --user pip
        - pip install --user awscli
        - go get github.com/mitchellh/gox
        - CC=arm-linux-gnueabihf-gcc CGO_ENABLED=true gox -cgo -os="$GOX_OS" -arch=arm -output=$GOX_OUTPUT ./...
        - aws s3 sync release/ s3://ziti-cmd-build-tmp/$TRAVIS_BUILD_ID

    - stage: "Build and Test"
      os: mac
      env: GOX_OS=darwin
      script:
        - set -e
        - pip install --upgrade pip
        - pip install awscli
        - go get github.com/mitchellh/gox
        - CGO_ENABLED=true gox -os="$GOX_OS" -arch=$TRAVIS_CPU_ARCH -output=$GOX_OUTPUT ./...
        - aws s3 sync release/ s3://ziti-cmd-build-tmp/$TRAVIS_BUILD_ID

    - stage: "Build and Test"
      os: windows
      env: GOX_OS=windows PATH=/c/Python36:/c/Python36/Scripts:$PATH
      script:
        - set -e
        - choco install python --version 3.6.8
        - python -m pip install --upgrade pip
        - pip install awscli
        - go get github.com/mitchellh/gox
        - CGO_ENABLED=true gox -os="$GOX_OS" -arch=$TRAVIS_CPU_ARCH -output=$GOX_OUTPUT ./...
        - aws s3 sync release/ s3://ziti-cmd-build-tmp/$TRAVIS_BUILD_ID

    - stage: "Tag and Publish"
      os: linux
      arch: amd64
      script:
        - set -e
        - pip install --upgrade --user pip
        - pip install awscli
        - ziti-ci configure-git
        - ziti-ci generate-build-info common/version/info_generated.go version
        - go get github.com/mitchellh/gox
        - CGO_ENABLED=true gox -os="linux" -arch=$TRAVIS_CPU_ARCH -output=$GOX_OUTPUT ./...
        - ziti-ci tag --only-for-branch master -v -f "$VERSION_FILE"
        - aws s3 sync s3://ziti-cmd-build-tmp/$TRAVIS_BUILD_ID release/
        - aws s3 rm --recursive s3://ziti-cmd-build-tmp/$TRAVIS_BUILD_ID
        - ziti-ci publish-to-artifactory
        - ziti-ci trigger-jenkins-smoke-build
