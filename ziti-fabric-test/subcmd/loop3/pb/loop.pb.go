/*
	Copyright NetFoundry, Inc.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	https://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loop.proto

package loop3_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Test struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TxRequests           int32    `protobuf:"varint,2,opt,name=txRequests,proto3" json:"txRequests,omitempty"`
	TxPacing             int32    `protobuf:"varint,3,opt,name=txPacing,proto3" json:"txPacing,omitempty"`
	TxMaxJitter          int32    `protobuf:"varint,4,opt,name=txMaxJitter,proto3" json:"txMaxJitter,omitempty"`
	RxRequests           int32    `protobuf:"varint,5,opt,name=rxRequests,proto3" json:"rxRequests,omitempty"`
	RxTimeout            int32    `protobuf:"varint,6,opt,name=rxTimeout,proto3" json:"rxTimeout,omitempty"`
	PayloadMinBytes      int32    `protobuf:"varint,7,opt,name=payloadMinBytes,proto3" json:"payloadMinBytes,omitempty"`
	PayloadMaxBytes      int32    `protobuf:"varint,8,opt,name=payloadMaxBytes,proto3" json:"payloadMaxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a086c469bfcb2d, []int{0}
}

func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (m *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(m, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test) GetTxRequests() int32 {
	if m != nil {
		return m.TxRequests
	}
	return 0
}

func (m *Test) GetTxPacing() int32 {
	if m != nil {
		return m.TxPacing
	}
	return 0
}

func (m *Test) GetTxMaxJitter() int32 {
	if m != nil {
		return m.TxMaxJitter
	}
	return 0
}

func (m *Test) GetRxRequests() int32 {
	if m != nil {
		return m.RxRequests
	}
	return 0
}

func (m *Test) GetRxTimeout() int32 {
	if m != nil {
		return m.RxTimeout
	}
	return 0
}

func (m *Test) GetPayloadMinBytes() int32 {
	if m != nil {
		return m.PayloadMinBytes
	}
	return 0
}

func (m *Test) GetPayloadMaxBytes() int32 {
	if m != nil {
		return m.PayloadMaxBytes
	}
	return 0
}

type Result struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a086c469bfcb2d, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Test)(nil), "loop3.pb.Test")
	proto.RegisterType((*Result)(nil), "loop3.pb.Result")
}

func init() { proto.RegisterFile("loop.proto", fileDescriptor_b6a086c469bfcb2d) }

var fileDescriptor_b6a086c469bfcb2d = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x6b, 0xc3, 0x30,
	0x10, 0x85, 0x49, 0xea, 0x38, 0xf6, 0x75, 0x28, 0xdc, 0x24, 0x4a, 0x29, 0x21, 0x53, 0xa6, 0x2c,
	0x59, 0x3b, 0x75, 0x2c, 0x04, 0x8a, 0xc8, 0x1f, 0x50, 0xdc, 0x23, 0x18, 0x6c, 0x4b, 0x95, 0x4e,
	0xa0, 0xfc, 0x85, 0xfe, 0xea, 0xda, 0x97, 0xba, 0x76, 0x3b, 0xdd, 0xbd, 0xef, 0x3d, 0xde, 0xf0,
	0x00, 0x1a, 0x6b, 0xdd, 0xde, 0x79, 0xcb, 0x16, 0x8b, 0xe1, 0x3f, 0xec, 0xdd, 0x79, 0xfb, 0xb5,
	0x84, 0xec, 0x44, 0x81, 0x11, 0x21, 0xeb, 0x4c, 0x4b, 0x6a, 0xb1, 0x59, 0xec, 0x4a, 0x2d, 0x3f,
	0x3e, 0x03, 0x70, 0xd2, 0xf4, 0x19, 0xfb, 0x40, 0x50, 0xcb, 0xde, 0x59, 0xe9, 0x19, 0xc1, 0x47,
	0x28, 0x38, 0xbd, 0x9b, 0xaa, 0xee, 0x2e, 0xea, 0x4e, 0xdc, 0x5f, 0x8d, 0x1b, 0xb8, 0xe7, 0x74,
	0x34, 0xe9, 0xad, 0x66, 0x26, 0xaf, 0x32, 0xb1, 0xe7, 0x68, 0x68, 0xf7, 0x53, 0xfb, 0xea, 0xd6,
	0x3e, 0x11, 0x7c, 0x82, 0xd2, 0xa7, 0x53, 0xdd, 0x92, 0x8d, 0xac, 0x72, 0xb1, 0x27, 0x80, 0x3b,
	0x78, 0x70, 0xe6, 0xda, 0x58, 0xf3, 0x71, 0xac, 0xbb, 0xd7, 0x2b, 0x53, 0x50, 0x6b, 0xc9, 0xfc,
	0xc7, 0xf3, 0xa4, 0x49, 0xb7, 0x64, 0xf1, 0x37, 0xf9, 0x83, 0xb7, 0x2f, 0x90, 0x6b, 0x0a, 0xb1,
	0x61, 0x54, 0xb0, 0x0e, 0xb1, 0xaa, 0x28, 0x04, 0x19, 0xa4, 0xd0, 0xa3, 0x1c, 0x9c, 0xb6, 0xbf,
	0xe6, 0x42, 0x32, 0x48, 0xa9, 0x47, 0x79, 0xce, 0x65, 0xdb, 0xc3, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xa7, 0xa6, 0xb7, 0x1f, 0x69, 0x01, 0x00, 0x00,
}
